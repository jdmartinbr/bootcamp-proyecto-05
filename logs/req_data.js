IncomingMessage {
    _readableState:
        ReadableState {
        objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: true,
            endEmitted: true,
            reading: false,
            sync: true,
            needReadable: false,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            destroyed: false,
            defaultEncoding: 'utf8',
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null },
    readable: false,
        domain: null,
        _events: {},
    _eventsCount: 0,
        _maxListeners: undefined,
        socket:
    Socket {
        connecting: false,
            _hadError: false,
            _handle:
        TCP {
            reading: true,
                owner: [Circular],
                onread: [Function: onread],
            onconnection: null,
                writeQueueSize: 0,
                _consumed: true },
        _parent: null,
            _host: null,
            _readableState:
        ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                buffer: [Object],
                length: 0,
                pipes: null,
                pipesCount: 0,
                flowing: true,
                ended: false,
                endEmitted: false,
                reading: true,
                sync: false,
                needReadable: true,
                emittedReadable: false,
                readableListening: false,
                resumeScheduled: false,
                destroyed: false,
                defaultEncoding: 'utf8',
                awaitDrain: 0,
                readingMore: false,
                decoder: null,
                encoding: null },
        readable: true,
            domain: null,
            _events:
        { end: [Array],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Array],
                timeout: [Function: socketOnTimeout],
            data: [Function: bound socketOnData],
            error: [Array],
                close: [Array],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause] },
        _eventsCount: 10,
            _maxListeners: undefined,
            _writableState:
        WritableState {
            objectMode: false,
                highWaterMark: 16384,
                finalCalled: false,
                needDrain: false,
                ending: false,
                ended: false,
                finished: false,
                destroyed: false,
                decodeStrings: false,
                defaultEncoding: 'utf8',
                length: 0,
                writing: false,
                corked: 0,
                sync: false,
                bufferProcessing: false,
                onwrite: [Function: bound onwrite],
            writecb: null,
                writelen: 0,
                bufferedRequest: null,
                lastBufferedRequest: null,
                pendingcb: 0,
                prefinished: false,
                errorEmitted: false,
                bufferedRequestCount: 0,
                corkedRequestsFree: [Object] },
        writable: true,
            allowHalfOpen: true,
            _bytesDispatched: 973,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server:
        Server {
            domain: null,
                _events: [Object],
                _eventsCount: 4,
                _maxListeners: undefined,
                _connections: 6,
                _handle: [Object],
                _usingSlaves: false,
                _slaves: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                keepAliveTimeout: 5000,
                _pendingResponseData: 0,
                maxHeadersCount: null,
                _connectionKey: '6::::3000',
                [Symbol(asyncId)]: 8 },
        _server:
            Server {
            domain: null,
                _events: [Object],
                _eventsCount: 4,
                _maxListeners: undefined,
                _connections: 6,
                _handle: [Object],
                _usingSlaves: false,
                _slaves: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                keepAliveTimeout: 5000,
                _pendingResponseData: 0,
                maxHeadersCount: null,
                _connectionKey: '6::::3000',
                [Symbol(asyncId)]: 8 },
        _idleTimeout: 120000,
            _idleNext:
        TimersList {
            _idleNext: [Circular],
                _idlePrev: [Circular],
                _timer: [Object],
                _unrefed: true,
                msecs: 120000,
                nextTick: false },
        _idlePrev:
            TimersList {
            _idleNext: [Circular],
                _idlePrev: [Circular],
                _timer: [Object],
                _unrefed: true,
                msecs: 120000,
                nextTick: false },
        _idleStart: 7888,
            _destroyed: false,
            parser:
        HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: bound onParserExecute],
            _headers: [],
                _url: '',
                _consumed: true,
                socket: [Circular],
                incoming: [Circular],
                outgoing: null,
                maxHeaderPairs: 2000,
                onIncoming: [Function: bound parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage:
        ServerResponse {
            domain: null,
                _events: [Object],
                _eventsCount: 2,
                _maxListeners: undefined,
                output: [],
                outputEncodings: [],
                outputCallbacks: [],
                outputSize: 0,
                writable: true,
                _last: false,
                upgrading: false,
                chunkedEncoding: false,
                shouldKeepAlive: true,
                useChunkedEncodingByDefault: true,
                sendDate: true,
                _removedConnection: false,
                _removedContLen: false,
                _removedTE: false,
                _contentLength: null,
                _hasBody: true,
                _trailer: '',
                finished: false,
                _headerSent: false,
                socket: [Circular],
                connection: [Circular],
                _header: null,
                _onPendingData: [Function: bound updateOutgoingData],
            _sent100: false,
                _expect_continue: false,
                req: [Circular],
                locals: {},
            writeHead: [Function: writeHead],
            end: [Function: end],
            _startAt: undefined,
                _startTime: undefined,
                __onFinished: [Object],
                [Symbol(outHeadersKey)]: [Object] },
        _peername: { address: '::1', family: 'IPv6', port: 53040 },
        [Symbol(asyncId)]: 97,
            [Symbol(bytesRead)]: 0,
            [Symbol(asyncId)]: 98,
            [Symbol(triggerAsyncId)]: 8 },
    connection:
        Socket {
        connecting: false,
            _hadError: false,
            _handle:
        TCP {
            reading: true,
                owner: [Circular],
                onread: [Function: onread],
            onconnection: null,
                writeQueueSize: 0,
                _consumed: true },
        _parent: null,
            _host: null,
            _readableState:
        ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                buffer: [Object],
                length: 0,
                pipes: null,
                pipesCount: 0,
                flowing: true,
                ended: false,
                endEmitted: false,
                reading: true,
                sync: false,
                needReadable: true,
                emittedReadable: false,
                readableListening: false,
                resumeScheduled: false,
                destroyed: false,
                defaultEncoding: 'utf8',
                awaitDrain: 0,
                readingMore: false,
                decoder: null,
                encoding: null },
        readable: true,
            domain: null,
            _events:
        { end: [Array],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Array],
                timeout: [Function: socketOnTimeout],
            data: [Function: bound socketOnData],
            error: [Array],
                close: [Array],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause] },
        _eventsCount: 10,
            _maxListeners: undefined,
            _writableState:
        WritableState {
            objectMode: false,
                highWaterMark: 16384,
                finalCalled: false,
                needDrain: false,
                ending: false,
                ended: false,
                finished: false,
                destroyed: false,
                decodeStrings: false,
                defaultEncoding: 'utf8',
                length: 0,
                writing: false,
                corked: 0,
                sync: false,
                bufferProcessing: false,
                onwrite: [Function: bound onwrite],
            writecb: null,
                writelen: 0,
                bufferedRequest: null,
                lastBufferedRequest: null,
                pendingcb: 0,
                prefinished: false,
                errorEmitted: false,
                bufferedRequestCount: 0,
                corkedRequestsFree: [Object] },
        writable: true,
            allowHalfOpen: true,
            _bytesDispatched: 973,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server:
        Server {
            domain: null,
                _events: [Object],
                _eventsCount: 4,
                _maxListeners: undefined,
                _connections: 6,
                _handle: [Object],
                _usingSlaves: false,
                _slaves: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                keepAliveTimeout: 5000,
                _pendingResponseData: 0,
                maxHeadersCount: null,
                _connectionKey: '6::::3000',
                [Symbol(asyncId)]: 8 },
        _server:
            Server {
            domain: null,
                _events: [Object],
                _eventsCount: 4,
                _maxListeners: undefined,
                _connections: 6,
                _handle: [Object],
                _usingSlaves: false,
                _slaves: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                keepAliveTimeout: 5000,
                _pendingResponseData: 0,
                maxHeadersCount: null,
                _connectionKey: '6::::3000',
                [Symbol(asyncId)]: 8 },
        _idleTimeout: 120000,
            _idleNext:
        TimersList {
            _idleNext: [Circular],
                _idlePrev: [Circular],
                _timer: [Object],
                _unrefed: true,
                msecs: 120000,
                nextTick: false },
        _idlePrev:
            TimersList {
            _idleNext: [Circular],
                _idlePrev: [Circular],
                _timer: [Object],
                _unrefed: true,
                msecs: 120000,
                nextTick: false },
        _idleStart: 7888,
            _destroyed: false,
            parser:
        HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: bound onParserExecute],
            _headers: [],
                _url: '',
                _consumed: true,
                socket: [Circular],
                incoming: [Circular],
                outgoing: null,
                maxHeaderPairs: 2000,
                onIncoming: [Function: bound parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage:
        ServerResponse {
            domain: null,
                _events: [Object],
                _eventsCount: 2,
                _maxListeners: undefined,
                output: [],
                outputEncodings: [],
                outputCallbacks: [],
                outputSize: 0,
                writable: true,
                _last: false,
                upgrading: false,
                chunkedEncoding: false,
                shouldKeepAlive: true,
                useChunkedEncodingByDefault: true,
                sendDate: true,
                _removedConnection: false,
                _removedContLen: false,
                _removedTE: false,
                _contentLength: null,
                _hasBody: true,
                _trailer: '',
                finished: false,
                _headerSent: false,
                socket: [Circular],
                connection: [Circular],
                _header: null,
                _onPendingData: [Function: bound updateOutgoingData],
            _sent100: false,
                _expect_continue: false,
                req: [Circular],
                locals: {},
            writeHead: [Function: writeHead],
            end: [Function: end],
            _startAt: undefined,
                _startTime: undefined,
                __onFinished: [Object],
                [Symbol(outHeadersKey)]: [Object] },
        _peername: { address: '::1', family: 'IPv6', port: 53040 },
        [Symbol(asyncId)]: 97,
            [Symbol(bytesRead)]: 0,
            [Symbol(asyncId)]: 98,
            [Symbol(triggerAsyncId)]: 8 },
    httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers:
    { host: 'localhost:3000',
        connection: 'keep-alive',
        'content-length': '34',
        'cache-control': 'max-age=0',
        origin: 'http://localhost:3000',
        'upgrade-insecure-requests': '1',
        'content-type': 'application/x-www-form-urlencoded',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
        referer: 'http://localhost:3000/login',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'es-ES,es;q=0.9,ca;q=0.8',
        cookie: 'Webstorm-ee9eb3b8=d614f8a2-92e3-429c-911b-b4ab13acf75b; __utmz=111872281.1521102187.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utma=111872281.
        413779837.1521102187.1521120323.1521134901.5; _ga=GA1.1.413779837.1521102187; io=PqYbDXsOX3w0Eg67AABW; connect.sid=s%3A029_7zoWJ5pKJEmWJQjPlIvednCF_qNa.%2F%2BbNL9NEA3
        ojpfsRV9kJHLjfqjeSoO0hjRlnARYh67w' },
        rawHeaders:
            [ 'Host',
                'localhost:3000',
                'Connection',
                'keep-alive',
                'Content-Length',
                '34',
                'Cache-Control',
                'max-age=0',
                'Origin',
                'http://localhost:3000',
                'Upgrade-Insecure-Requests',
                '1',
                'Content-Type',
                'application/x-www-form-urlencoded',
                'User-Agent',
                'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36',
                'Accept',
                'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
                'Referer',
                'http://localhost:3000/login',
                'Accept-Encoding',
                'gzip, deflate, br',
                'Accept-Language',
                'es-ES,es;q=0.9,ca;q=0.8',
                'Cookie',
                'Webstorm-ee9eb3b8=d614f8a2-92e3-429c-911b-b4ab13acf75b; __utmz=111872281.1521102187.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utma=111872281.41377983
                7.1521102187.1521120323.1521134901.5; _ga=GA1.1.413779837.1521102187; io=PqYbDXsOX3w0Eg67AABW; connect.sid=s%3A029_7zoWJ5pKJEmWJQjPlIvednCF_qNa.%2F%2BbNL9NEA3ojpfsRV9
        kJHLjfqjeSoO0hjRlnARYh67w' ],
        trailers: {},
        rawTrailers: [],
            upgrade: false,
        url: '/login',
        method: 'POST',
        statusCode: null,
        statusMessage: null,
        client:
        Socket {
        connecting: false,
            _hadError: false,
            _handle:
        TCP {
            reading: true,
                owner: [Circular],
                onread: [Function: onread],
            onconnection: null,
                writeQueueSize: 0,
                _consumed: true },
        _parent: null,
            _host: null,
            _readableState:
        ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                buffer: [Object],
                length: 0,
                pipes: null,
                pipesCount: 0,
                flowing: true,
                ended: false,
                endEmitted: false,
                reading: true,
                sync: false,
                needReadable: true,
                emittedReadable: false,
                readableListening: false,
                resumeScheduled: false,
                destroyed: false,
                defaultEncoding: 'utf8',
                awaitDrain: 0,
                readingMore: false,
                decoder: null,
                encoding: null },
        readable: true,
            domain: null,
            _events:
        { end: [Array],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Array],
                timeout: [Function: socketOnTimeout],
            data: [Function: bound socketOnData],
            error: [Array],
                close: [Array],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause] },
        _eventsCount: 10,
            _maxListeners: undefined,
            _writableState:
        WritableState {
            objectMode: false,
                highWaterMark: 16384,
                finalCalled: false,
                needDrain: false,
                ending: false,
                ended: false,
                finished: false,
                destroyed: false,
                decodeStrings: false,
                defaultEncoding: 'utf8',
                length: 0,
                writing: false,
                corked: 0,
                sync: false,
                bufferProcessing: false,
                onwrite: [Function: bound onwrite],
            writecb: null,
                writelen: 0,
                bufferedRequest: null,
                lastBufferedRequest: null,
                pendingcb: 0,
                prefinished: false,
                errorEmitted: false,
                bufferedRequestCount: 0,
                corkedRequestsFree: [Object] },
        writable: true,
            allowHalfOpen: true,
            _bytesDispatched: 973,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server:
        Server {
            domain: null,
                _events: [Object],
                _eventsCount: 4,
                _maxListeners: undefined,
                _connections: 6,
                _handle: [Object],
                _usingSlaves: false,
                _slaves: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                keepAliveTimeout: 5000,
                _pendingResponseData: 0,
                maxHeadersCount: null,
                _connectionKey: '6::::3000',
                [Symbol(asyncId)]: 8 },
        _server:
            Server {
            domain: null,
                _events: [Object],
                _eventsCount: 4,
                _maxListeners: undefined,
                _connections: 6,
                _handle: [Object],
                _usingSlaves: false,
                _slaves: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                keepAliveTimeout: 5000,
                _pendingResponseData: 0,
                maxHeadersCount: null,
                _connectionKey: '6::::3000',
                [Symbol(asyncId)]: 8 },
        _idleTimeout: 120000,
            _idleNext:
        TimersList {
            _idleNext: [Circular],
                _idlePrev: [Circular],
                _timer: [Object],
                _unrefed: true,
                msecs: 120000,
                nextTick: false },
        _idlePrev:
            TimersList {
            _idleNext: [Circular],
                _idlePrev: [Circular],
                _timer: [Object],
                _unrefed: true,
                msecs: 120000,
                nextTick: false },
        _idleStart: 7888,
            _destroyed: false,
            parser:
        HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: bound onParserExecute],
            _headers: [],
                _url: '',
                _consumed: true,
                socket: [Circular],
                incoming: [Circular],
                outgoing: null,
                maxHeaderPairs: 2000,
                onIncoming: [Function: bound parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage:
        ServerResponse {
            domain: null,
                _events: [Object],
                _eventsCount: 2,
                _maxListeners: undefined,
                output: [],
                outputEncodings: [],
                outputCallbacks: [],
                outputSize: 0,
                writable: true,
                _last: false,
                upgrading: false,
                chunkedEncoding: false,
                shouldKeepAlive: true,
                useChunkedEncodingByDefault: true,
                sendDate: true,
                _removedConnection: false,
                _removedContLen: false,
                _removedTE: false,
                _contentLength: null,
                _hasBody: true,
                _trailer: '',
                finished: false,
                _headerSent: false,
                socket: [Circular],
                connection: [Circular],
                _header: null,
                _onPendingData: [Function: bound updateOutgoingData],
            _sent100: false,
                _expect_continue: false,
                req: [Circular],
                locals: {},
            writeHead: [Function: writeHead],
            end: [Function: end],
            _startAt: undefined,
                _startTime: undefined,
                __onFinished: [Object],
                [Symbol(outHeadersKey)]: [Object] },
        _peername: { address: '::1', family: 'IPv6', port: 53040 },
        [Symbol(asyncId)]: 97,
            [Symbol(bytesRead)]: 0,
            [Symbol(asyncId)]: 98,
            [Symbol(triggerAsyncId)]: 8 },
        _consuming: true,
            _dumped: false,
        next: [Function: next],
        baseUrl: '/users',
            originalUrl: '/users/login',
        _parsedUrl:
        Url {
        protocol: null,
            slashes: null,
            auth: null,
            host: null,
            port: null,
            hostname: null,
            hash: null,
            search: null,
            query: null,
            pathname: '/login',
            path: '/login',
            href: '/login',
            _raw: '/login' },
        params: {},
        query: {},
        res:
            ServerResponse {
        domain: null,
            _events: { finish: [Array], end: [Function: onevent] },
        _eventsCount: 2,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: false,
            upgrading: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedConnection: false,
            _removedContLen: false,
            _removedTE: false,
            _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket:
        Socket {
            connecting: false,
                _hadError: false,
                _handle: [Object],
                _parent: null,
                _host: null,
                _readableState: [Object],
                readable: true,
                domain: null,
                _events: [Object],
                _eventsCount: 10,
                _maxListeners: undefined,
                _writableState: [Object],
                writable: true,
                allowHalfOpen: true,
                _bytesDispatched: 973,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: [Object],
                _server: [Object],
                _idleTimeout: 120000,
                _idleNext: [Object],
                _idlePrev: [Object],
                _idleStart: 7888,
                _destroyed: false,
                parser: [Object],
                on: [Function: socketOnWrap],
            _paused: false,
                read: [Function],
                _consuming: true,
                _httpMessage: [Circular],
                _peername: [Object],
                [Symbol(asyncId)]: 97,
                [Symbol(bytesRead)]: 0,
                [Symbol(asyncId)]: 98,
                [Symbol(triggerAsyncId)]: 8 },
        connection:
            Socket {
            connecting: false,
                _hadError: false,
                _handle: [Object],
                _parent: null,
                _host: null,
                _readableState: [Object],
                readable: true,
                domain: null,
                _events: [Object],
                _eventsCount: 10,
                _maxListeners: undefined,
                _writableState: [Object],
                writable: true,
                allowHalfOpen: true,
                _bytesDispatched: 973,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: [Object],
                _server: [Object],
                _idleTimeout: 120000,
                _idleNext: [Object],
                _idlePrev: [Object],
                _idleStart: 7888,
                _destroyed: false,
                parser: [Object],
                on: [Function: socketOnWrap],
            _paused: false,
                read: [Function],
                _consuming: true,
                _httpMessage: [Circular],
                _peername: [Object],
                [Symbol(asyncId)]: 97,
                [Symbol(bytesRead)]: 0,
                [Symbol(asyncId)]: 98,
                [Symbol(triggerAsyncId)]: 8 },
        _header: null,
            _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
            _expect_continue: false,
            req: [Circular],
            locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        _startAt: undefined,
            _startTime: undefined,
            __onFinished: { [Function: listener] queue: [Array] },
        [Symbol(outHeadersKey)]: { 'x-powered-by': [Array] } },
        _passport:
        { instance:
            Authenticator {
            _key: 'passport',
                _strategies: [Object],
                _serializers: [Array],
                _deserializers: [Array],
                _infoTransformers: [],
                _framework: [Object],
                _userProperty: 'user',
                _sm: [Object],
                Authenticator: [Function: Authenticator],
            Passport: [Function: Authenticator],
            Strategy: [Object],
                strategies: [Object] },
            session: { user: 40 } },
        flash: [Function: _flash],
        _parsedOriginalUrl:
            Url {
        protocol: null,
            slashes: null,
            auth: null,
            host: null,
            port: null,
            hostname: null,
            hash: null,
            search: null,
            query: null,
            pathname: '/users/login',
            path: '/users/login',
            href: '/users/login',
            _raw: '/users/login' },
        sessionStore:
            MemoryStore {
        domain: null,
            _events:
        { disconnect: [Function: ondisconnect],
            connect: [Function: onconnect] },
        _eventsCount: 2,
            _maxListeners: undefined,
            sessions:
        { '029_7zoWJ5pKJEmWJQjPlIvednCF_qNa': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}' },
        generate: [Function] },
        sessionID: '029_7zoWJ5pKJEmWJQjPlIvednCF_qNa',
            session:
        Session {
        cookie:
        { path: '/',
            _expires: null,
            originalMaxAge: null,
            httpOnly: true },
        passport: { user: 40 } },
        _startAt: [ 719170, 27199092 ],
            _startTime: 2018-04-04T16:22:14.351Z,
        _remoteAddress: '::1',
        body: { usuario: 'jdmartinbr', password: '111111' },
        _body: true,
            length: undefined,
        read: [Function],
        secret: undefined,
        cookies:
        { 'Webstorm-ee9eb3b8': 'd614f8a2-92e3-429c-911b-b4ab13acf75b',
            __utmz: '111872281.1521102187.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)',
            __utma: '111872281.413779837.1521102187.1521120323.1521134901.5',
            _ga: 'GA1.1.413779837.1521102187',
            io: 'PqYbDXsOX3w0Eg67AABW',
            'connect.sid': 's:029_7zoWJ5pKJEmWJQjPlIvednCF_qNa./+bNL9NEA3ojpfsRV9kJHLjfqjeSoO0hjRlnARYh67w' },
        signedCookies: {},
        route:
            Route {
        path: '/login',
            stack: [ [Object], [Object] ],
            methods: { post: true } },
        user:
            RowDataPacket {
        id: 40,
            usuario: 'jdmartinbr',
            email: 'jd.martinbr@gmail.com',
            password: '111111',
            hash: '$2a$10$457aSHekkKcu3J.8DYdlqepsvWJVPylIsLqFyt6tokNpV8EtBVJl.' },
        authInfo: {} }
